(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{77:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return b})),n.d(a,"metadata",(function(){return o})),n.d(a,"rightToc",(function(){return l})),n.d(a,"default",(function(){return p}));var t=n(2),i=n(6),r=(n(0),n(99)),b={id:"maybe",title:"Maybe - A Better Optional",sidebar_label:"Maybe (WIP)"},o={unversionedId:"types/maybe",id:"types/maybe",isDocsHomePage:!1,title:"Maybe - A Better Optional",description:"Why Maybe",source:"@site/docs/types/maybe.md",slug:"/types/maybe",permalink:"/docs/types/maybe",version:"current",sidebar_label:"Maybe (WIP)",sidebar:"j8PlusSidebar",previous:{title:"Types",permalink:"/docs/types/"},next:{title:"Either - Turn Your Partial Function into a Total Function",permalink:"/docs/types/either"}},l=[{value:"Why <code>Maybe</code>",id:"why-maybe",children:[]},{value:"Use <code>Maybe</code>",id:"use-maybe",children:[{value:"<code>Maybe.maybe()</code>",id:"maybemaybe",children:[]},{value:"<code>Maybe.nothing()</code>",id:"maybenothing",children:[]},{value:"<code>Maybe.map()</code>",id:"maybemap",children:[]},{value:"<code>Maybe.flatMap()</code>",id:"maybeflatmap",children:[]},{value:"<code>Maybe.filter()</code>",id:"maybefilter",children:[]},{value:"Use the value - <code>Maybe.fold()</code>",id:"use-the-value---maybefold",children:[]},{value:"<code>Maybe.isJust()</code>",id:"maybeisjust",children:[]},{value:"<code>Maybe.isNothing()</code>",id:"maybeisnothing",children:[]}]},{value:"Create <code>Maybe</code> from <code>Optional</code>",id:"create-maybe-from-optional",children:[]},{value:"<code>Maybe</code> to <code>Optional</code>",id:"maybe-to-optional",children:[]}],c={rightToc:l};function p(e){var a=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(t.a)({},c,n,{components:a,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"why-maybe"},"Why ",Object(r.b)("inlineCode",{parentName:"h2"},"Maybe")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Maybe")," is an alternative to Java's ",Object(r.b)("inlineCode",{parentName:"p"},"Optional"),". Java has ",Object(r.b)("inlineCode",{parentName:"p"},"Optional")," then why do we need ",Object(r.b)("inlineCode",{parentName:"p"},"Maybe"),"?"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"First of all, Java's ",Object(r.b)("inlineCode",{parentName:"li"},"Optional")," is not ",Object(r.b)("inlineCode",{parentName:"li"},"Serializable"),". When it was added to Java 8, the designers of the language didn't want us to use it as a type for the object member variables."),Object(r.b)("li",{parentName:"ul"},"Java's ",Object(r.b)("inlineCode",{parentName:"li"},"Optional")," has the ",Object(r.b)("inlineCode",{parentName:"li"},"get()")," method which means it may throw an exception if ",Object(r.b)("inlineCode",{parentName:"li"},"Optional.isPresent()")," is ",Object(r.b)("inlineCode",{parentName:"li"},"false"),".")),Object(r.b)("h2",{id:"use-maybe"},"Use ",Object(r.b)("inlineCode",{parentName:"h2"},"Maybe")),Object(r.b)("h3",{id:"maybemaybe"},Object(r.b)("inlineCode",{parentName:"h3"},"Maybe.maybe()")),Object(r.b)("p",null,"To construct ",Object(r.b)("inlineCode",{parentName:"p"},"Maybe"),", use ",Object(r.b)("inlineCode",{parentName:"p"},"Maybe.maybe"),". If the given argument is ",Object(r.b)("inlineCode",{parentName:"p"},"null"),", it creates ",Object(r.b)("inlineCode",{parentName:"p"},"Nothing"),", otherwise it's ",Object(r.b)("inlineCode",{parentName:"p"},"Just")," with the given value."),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-java"}),"import j8plus.types.Maybe;\n\nMaybe.maybe(123);\n// Maybe<Integer> = Just(123)\n\nMaybe.maybe(null);\n// Maybe = Nothing\n")),Object(r.b)("h3",{id:"maybenothing"},Object(r.b)("inlineCode",{parentName:"h3"},"Maybe.nothing()")),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-java"}),"import j8plus.types.Maybe;\n\nMaybe.nothing();\n// Maybe = Nothing\n")),Object(r.b)("h3",{id:"maybemap"},Object(r.b)("inlineCode",{parentName:"h3"},"Maybe.map()")),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-java"}),"import j8plus.types.Maybe;\n\nMaybe.maybe(1).map(n -> n * 2) // Maybe<Integer> = Just(2)\n")),Object(r.b)("h3",{id:"maybeflatmap"},Object(r.b)("inlineCode",{parentName:"h3"},"Maybe.flatMap()")),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-java"}),"import j8plus.types.Maybe;\n\npublic Maybe<User> findUser(final Long id) \n\n// ...\n\nfinal Maybe<User> maybeUser = findUser(1L);\n// Maybe<User> = Just(User(1L, Kevin, Maybe<String> = Just(kevin@blah.blah)))\nmaybeUser.flatMap(user -> user.getEmail()) // Maybe<String> = Just(kevin@blah.blah)\n\nfinal Maybe<User> maybeUser2 = findUser(2L);\n// Maybe<User> = Just(User(2L, John, Maybe = Nothing))\nmaybeUser2.flatMap(user -> user.getEmail()) // Maybe = Nothing\n")),Object(r.b)("h3",{id:"maybefilter"},Object(r.b)("inlineCode",{parentName:"h3"},"Maybe.filter()")),Object(r.b)("h3",{id:"use-the-value---maybefold"},"Use the value - ",Object(r.b)("inlineCode",{parentName:"h3"},"Maybe.fold()")),Object(r.b)("h3",{id:"maybeisjust"},Object(r.b)("inlineCode",{parentName:"h3"},"Maybe.isJust()")),Object(r.b)("h3",{id:"maybeisnothing"},Object(r.b)("inlineCode",{parentName:"h3"},"Maybe.isNothing()")),Object(r.b)("h2",{id:"create-maybe-from-optional"},"Create ",Object(r.b)("inlineCode",{parentName:"h2"},"Maybe")," from ",Object(r.b)("inlineCode",{parentName:"h2"},"Optional")),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-java"}),'import j8plus.types.Maybe;\n\nfinal Optional<String> optionalName = Optional.ofNullable("Kevin");\n// Optional[Kevin]\n\n// ...\nfinal Maybe<String> maybeName = Maybe.fromOptional(optionalName);\n// Just(Kevin)\n')),Object(r.b)("h2",{id:"maybe-to-optional"},Object(r.b)("inlineCode",{parentName:"h2"},"Maybe")," to ",Object(r.b)("inlineCode",{parentName:"h2"},"Optional")),Object(r.b)("p",null,"If you need to convert ",Object(r.b)("inlineCode",{parentName:"p"},"Maybe")," into ",Object(r.b)("inlineCode",{parentName:"p"},"Optional"),", you can do it with ",Object(r.b)("inlineCode",{parentName:"p"},"Maybe.toOptional()"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-java"}),"import j8plus.types.Maybe;\n\nMaybe.maybe(1).toOptional() // Optional[1]\nMaybe.nothing().toOptional() // Optional.empty\n")))}p.isMDXComponent=!0},99:function(e,a,n){"use strict";n.d(a,"a",(function(){return y})),n.d(a,"b",(function(){return s}));var t=n(0),i=n.n(t);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function b(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?b(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),p=function(e){var a=i.a.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},y=function(e){var a=p(e.components);return i.a.createElement(c.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return i.a.createElement(i.a.Fragment,{},a)}},m=i.a.forwardRef((function(e,a){var n=e.components,t=e.mdxType,r=e.originalType,b=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),y=p(n),m=t,s=y["".concat(b,".").concat(m)]||y[m]||d[m]||r;return n?i.a.createElement(s,o(o({ref:a},c),{},{components:n})):i.a.createElement(s,o({ref:a},c))}));function s(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=n.length,b=new Array(r);b[0]=m;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o.mdxType="string"==typeof e?e:t,b[1]=o;for(var c=2;c<r;c++)b[c]=n[c];return i.a.createElement.apply(null,b)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);